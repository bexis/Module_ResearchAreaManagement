@using BExIS.Pmm.Entities;
@using Telerik.Web.Mvc.UI;

<div style="height:1000px;">
    @using (Html.BeginForm("ImportInformation", "Main",
                                 FormMethod.Post, new { id = "uploadForm", type = "Plot", enctype = "multipart/form-data", area = "PMM" }))
    {

        @Html.Telerik().Upload().Name("attachments")

        <input type="submit" value="Send" class="t-button" />
        <input type="hidden" value="Plot" name="type" id="type" class="t-button" />
        <input type="reset" value="Reset" class="t-button" />

    }
   
@if(ViewData["Plot"]!= null) { 
            @(Html.Telerik().Grid<ImportPlotObject>((List<ImportPlotObject>)ViewData["Plot"])
                 .Name("Plots")
                 .BindTo((List<ImportPlotObject>)ViewData["Plot"])
                 .Columns(columns =>
                 {
                     columns.Bound(c => c.Index);
                     columns.Bound(c => c.Action);
                     columns.Bound(c => c.Plot.Id);
                     columns.Bound(c => c.Plot.PlotId);
                     columns.Bound(c => c.Plot.PlotType);
                     columns.Bound(c => c.Plot.Coordinate);
                     columns.Bound(c => c.Plot.CoordinateType);
                     columns.Bound(c => c.Plot.Latitude);
                     columns.Bound(c => c.Plot.Longitude);
                     columns.Bound(c => c.Plot.Status);
                     columns.Bound(c => c.UploadSuccessful);
                 }));

}
else if (ViewData["SubPlot"] != null)
{
    @(Html.Telerik().Grid<ImportGeometryObject>((List<ImportGeometryObject>)ViewData["SubPlot"])
                 .Name("Geometries")
                 .Columns(columns =>
                 {
                     columns.Bound(c => c.Index);
                     columns.Bound(c => c.Action);
                     columns.Bound(c => c.Geometry.Id);
                     columns.Bound(c => c.Geometry.Name);
                     columns.Bound(c => c.Geometry.GeometryType);
                     columns.Bound(c => c.Geometry.Coordinate);
                     columns.Bound(c => c.Geometry.CoordinateType);
                     columns.Bound(c => c.Geometry.LineWidth);
                     columns.Bound(c => c.Geometry.Color);
                     columns.Bound(c => c.Geometry.ReferencePoint);
                     columns.Bound(c => c.Geometry.Description);
                     columns.Bound(c => c.Geometry.Status);
                     columns.Bound(c => c.Geometry.PlotId);
                     columns.Bound(c => c.UploadSuccessful);
                 }));
}

    </div>